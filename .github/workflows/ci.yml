name: Continuous Integration

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Code Formatting
        id: format-check
        run: npm run format:check

      - name: Lint Code
        id: npm-lint
        run: npm run lint

      # TODO: Fix Jest configuration for CI environment
      # - name: Run Tests
      #   id: npm-test
      #   run: npm run test

      - name: Build and Bundle
        id: npm-bundle
        run: npm run bundle

      - name: Check dist Directory
        id: check-dist
        run: |
          if [ "$(git diff --ignore-space-at-eol --text dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff --ignore-space-at-eol --text dist/
            exit 1
          fi

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest
    needs: test-typescript
    permissions:
      contents: write

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Test Local Action
        id: test-action
        uses: ./

      - name: Print Environment Output
        id: output-env
        run: |
          echo "Environment: ${{ steps.test-action.outputs.environment }}"

      - name: Print Version Output
        id: output-version
        run: |
          echo "Next Version: ${{ steps.test-action.outputs.nextVersion }}"

      - name: Print Old Version Output
        id: output-old-version
        run: |
          echo "Old Version: ${{ steps.test-action.outputs.oldVersion }}"

      - name: Print Version Change Type
        id: output-change-type
        run: |
          echo "Version Change: ${{ steps.test-action.outputs.versionChangeType }}"

      - name: Print Prerelease Status
        id: output-prerelease
        run: |
          echo "Prerelease: ${{ steps.test-action.outputs.prerelease }}"

      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        if: |
          steps.test-action.outputs.nextVersion != steps.test-action.outputs.oldVersion &&
          github.ref == 'refs/heads/main'
        with:
          name: '${{ steps.test-action.outputs.nextVersion }}'
          tag: '${{ steps.test-action.outputs.nextVersion }}'
          prerelease: '${{ steps.test-action.outputs.prerelease }}'
          body: '${{ steps.changelog-ci.outputs.change-logs }}'

      - uses: marvinpinto/action-automatic-releases@v1.2.1
        if:
          '${{ steps.test-action.outputs.nextVersion !=
          steps.test-action.outputs.oldVersion }}'
        with:
          repo_token: ${{ github.token }}
          automatic_release_tag: '${{ steps.test-action.outputs.nextVersion }}'
          prerelease: '${{ steps.test-action.outputs.prerelease }}'
          title: '${{ steps.test-action.outputs.nextVersion }}'
